import react from "eslint-plugin-react";
import reactHooksPlugin from "eslint-plugin-react-hooks";
import globals from "globals";

/** @type {import("eslint").Linter.Config} */
const reactConfig = {
  files: ["**/*.{js,jsx,mjs,cjs,ts,tsx}"],
  languageOptions: {
    globals: { ...globals.browser },
    parserOptions: { ecmaFeatures: { jsx: true } },
  },
  plugins: { react, "react-hooks": reactHooksPlugin },
  rules: {
    "@typescript-eslint/explicit-module-boundary-types": 0,
    "react-hooks/exhaustive-deps": 0,
    "react-hooks/rules-of-hooks": 0,
    "react/boolean-prop-naming": [
      2,
      { rule: "^(is|has|should|can|did|will|must)[A-Z]([A-Za-z0-9])" },
    ],
    "react/button-has-type": 2,
    "react/default-props-match-prop-types": 0,
    "react/destructuring-assignment": [2, "always"],
    "react/display-name": 0,
    "react/forbid-component-props": 0,
    "react/forbid-dom-props": 0,
    "react/forbid-elements": 0,
    "react/forbid-foreign-prop-types": 0,
    "react/forbid-prop-types": 0,

    "react/function-component-definition": [
      2,
      {
        namedComponents: "function-declaration",
        unamedComponents: "arrow-function",
      },
    ],
    "react/hook-use-state": 2,
    "react/iframe-missing-sandbox": 1,
    "react/jsx-boolean-value": 2,
    "react/jsx-child-element-spacing": 0,
    "react/jsx-closing-bracket-location": 0,
    "react/jsx-closing-tag-location": 0,
    "react/jsx-curly-brace-presence": [
      2,
      { children: "never", props: "never" },
    ],
    "react/jsx-curly-newline": 0,
    "react/jsx-curly-spacing": 0,
    "react/jsx-equals-spacing": 0,
    "react/jsx-filename-extension": [2, { extensions: [".tsx", ".jsx"] }],
    "react/jsx-first-prop-new-line": 0,
    "react/jsx-fragments": 2,
    "react/jsx-handler-names": 2,
    "react/jsx-indent": 0,
    "react/jsx-indent-props": 0,
    "react/jsx-key": 2,
    "react/jsx-max-depth": 0,
    "react/jsx-max-props-per-line": 0,
    "react/jsx-newline": 0,
    "react/jsx-no-bind": 0,
    "react/jsx-no-comment-textnodes": 2,
    // This rules could be helpful but it might be hard to apply everywhere
    "react/jsx-no-constructed-context-values": 2,
    "react/jsx-no-duplicate-props": 2,
    "react/jsx-no-leaked-render": 2,
    "react/jsx-no-literals": 0,
    "react/jsx-no-script-url": 2,
    "react/jsx-no-target-blank": 2,
    "react/jsx-no-undef": 2,
    "react/jsx-no-useless-fragment": 2,
    "react/jsx-one-expression-per-line": 0,
    "react/jsx-pascal-case": 2,
    "react/jsx-props-no-multi-spaces": 0,
    "react/jsx-props-no-spreading": 0,
    // https://perfectionist.dev/rules/sort-jsx-props
    "react/jsx-sort-props": 0,
    "react/jsx-tag-spacing": 0,
    "react/jsx-uses-react": 2,
    "react/jsx-uses-vars": 2,
    "react/jsx-wrap-multilines": 0,
    "react/no-access-state-in-setstate": 0,
    "react/no-adjacent-inline-elements": 2,
    "react/no-array-index-key": 1,
    "react/no-arrow-function-lifecycle": 0,
    "react/no-children-prop": 2,
    "react/no-danger": 2,
    "react/no-danger-with-children": 2,
    "react/no-deprecated": 2,
    "react/no-did-mount-set-state": 2,
    "react/no-did-update-set-state": 2,
    "react/no-direct-mutation-state": 2,
    "react/no-find-dom-node": 2,
    "react/no-invalid-html-attribute": 2,
    "react/no-is-mounted": 2,
    "react/no-multi-comp": 0,
    "react/no-namespace": 2,
    "react/no-object-type-as-default-prop": 2,
    "react/no-redundant-should-component-update": 2,
    "react/no-render-return-value": 2,
    "react/no-set-state": 0,
    "react/no-string-refs": 2,
    "react/no-this-in-sfc": 2,
    "react/no-typos": 2,
    "react/no-unescaped-entities": 2,
    "react/no-unknown-property": 2,
    "react/no-unsafe": 2,
    "react/no-unstable-nested-components": 2,
    "react/no-unused-class-component-methods": 2,
    "react/no-unused-prop-types": 2,
    "react/no-unused-state": 2,
    "react/no-will-update-set-state": 2,
    "react/prefer-es6-class": 0,
    "react/prefer-exact-props": 0,
    "react/prefer-read-only-props": 0,
    "react/prefer-stateless-function": 0,
    "react/prop-types": 2,
    "react/react-in-jsx-scope": 0,
    "react/require-default-props": 0,
    "react/require-optimization": 0,
    "react/require-render-return": 0,
    "react/self-closing-comp": 2,
    "react/sort-comp": 0,
    "react/sort-default-props": 0,
    "react/sort-prop-types": 2,
    "react/state-in-constructor": 0,
    "react/static-property-placement": 0,
    "react/style-prop-object": 0,
    "react/void-dom-elements-no-children": 2,
  },
  settings: { react: { version: "detect" } },
};

export default reactConfig;
