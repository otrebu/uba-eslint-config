const deprecatedESlintStylisticRules = {
  "array-bracket-newline": 0,
  "array-bracket-spacing": 0,
  "array-element-newline": 0,
  "arrow-parens": 0,
  "arrow-spacing": 0,
  "block-spacing": 0,
  "brace-style": 0,
  "comma-dangle": 0,
  "comma-spacing": 0,
  "comma-style": 0,
  "computed-property-spacing": 0,
  "dot-location": 0,
  "eol-last": 0,
  "func-call-spacing": 0,
  "function-call-argument-newline": 0,
  "function-paren-newline": 0,
  "generator-star-spacing": 0,
  "implicit-arrow-linebreak": 0,
  indent: 0,
  "jsx-quotes": 0,
  "key-spacing": 0,
  "keyword-spacing": 0,
  "linebreak-style": 0,
  "lines-around-comment": 0,
  "lines-between-class-members": 0,
  "max-len": 0,
  "max-statements-per-line": 0,
  "multiline-ternary": 0,
  "new-parens": 0,
  "newline-per-chained-call": 0,
  "no-confusing-arrow": 0,
  "no-extra-parens": 0,
  "no-extra-semi": 2,
  "no-floating-decimal": 0,
  "no-mixed-operators": 0,
  "no-mixed-spaces-and-tabs": 0,
  "no-multi-spaces": 0,
  "no-multiple-empty-lines": 0,
  "no-tabs": 0,
  "no-trailing-spaces": 0,
  "no-whitespace-before-property": 0,
  "nonblock-statement-body-position": 0,
  "object-curly-newline": 0,
  "object-curly-spacing": 0,
  "object-property-newline": 0,
  "one-var-declaration-per-line": 0,
  "operator-linebreak": 0,
  "padded-blocks": 0,
  "padding-line-between-statements": 0,
  "quote-props": 0,
  quotes: 0,
  "rest-spread-spacing": 0,
  semi: 0,
  "semi-spacing": 0,
  "semi-style": 0,
  "space-before-blocks": 0,
  "space-before-function-paren": 0,
  "space-in-parens": 0,
  "space-infix-ops": 0,
  "space-unary-ops": 0,
  "spaced-comment": 0,
  "switch-colon-spacing": 0,
  "template-curly-spacing": 0,
  "template-tag-spacing": 0,
  "wrap-iife": 0,
  "wrap-regex": 0,
  "yield-star-spacing": 0,
};

/** @type {import("eslint").Linter.Config} */
const eslintConfig = {
  files: ["**/*.js", "**/*.jsx", "**/*.mjs", "**/*.cjs", "**/*.ts", "**/*.tsx"],
  rules: {
    "accessor-pairs": 0,
    "array-callback-return": 2,
    "arrow-body-style": 0,
    "block-scoped-var": 2,
    camelcase: 0,
    "capitalized-comments": 0,
    "class-methods-use-this": 0,
    complexity: [2],
    "consistent-return": 2,
    "consistent-this": 0,
    "constructor-super": 0,
    "default-case": 2,
    "default-case-last": 2,
    "default-param-last": 2,
    "dot-notation": 0,
    eqeqeq: 2,
    "for-direction": 2,
    "func-name-matching": 2,
    "func-names": 2,
    "func-style": [2, "declaration", { allowArrowFunctions: false }],
    "getter-return": 0,
    "grouped-accessor-pairs": 0,
    "guard-for-in": 2,
    "id-denylist": 0,
    "id-length": 0,
    "id-match": 0,
    "init-declarations": [2, "always"],
    "logical-assignment-operators": 2,
    "max-classes-per-file": 0,
    "max-depth": 2,
    "max-lines": 0,
    "max-lines-per-function": 0,
    "max-nested-callbacks": 2,
    "max-params": [2, { max: 3 }],
    "max-statements": 0,
    "new-cap": 0,
    "no-alert": 2,
    "no-array-constructor": 0,
    "no-async-promise-executor": 2,
    "no-await-in-loop": 2,
    "no-bitwise": 2,
    "no-caller": 2,
    "no-case-declarations": 2,
    "no-class-assign": 0,
    "no-compare-neg-zero": 2,
    "no-cond-assign": 2,
    "no-console": 2,
    "no-const-assign": 2,
    "no-constant-binary-expression": 2,
    "no-constant-condition": 2,
    "no-constructor-return": 0,
    "no-continue": 2,
    "no-control-regex": 2,
    "no-debugger": 2,
    "no-delete-var": 2,
    "no-div-regex": 2,
    "no-dupe-args": 2,
    "no-dupe-class-members": 0,
    "no-dupe-else-if": 2,
    "no-dupe-keys": 2,
    "no-duplicate-case": 2,
    "no-duplicate-imports": 0,
    "no-else-return": 0,
    "no-empty": 2,
    "no-empty-character-class": 0,
    "no-empty-function": 0,
    "no-empty-pattern": 2,
    "no-empty-static-block": 0,
    "no-eq-null": 2,
    "no-eval": 2,
    "no-ex-assign": 2,
    "no-extend-native": 2,
    "no-extra-bind": 2,
    "no-extra-boolean-cast": 2,
    "no-extra-label": 2,
    "no-fallthrough": 2,
    "no-func-assign": 2,
    "no-global-assign": 2,
    "no-implicit-coercion": 2,
    "no-implicit-globals": 2,
    "no-implied-eval": 2,
    "no-import-assign": 2,
    "no-inline-comments": 2,
    "no-inner-declarations": 2,
    "no-invalid-regexp": 2,
    "no-invalid-this": 2,
    "no-irregular-whitespace": 2,
    "no-iterator": 2,
    "no-label-var": 2,
    "no-labels": 2,
    "no-lone-blocks": 2,
    "no-lonely-if": 2,
    "no-loop-func": 2,
    "no-loss-of-precision": 2,
    "no-magic-numbers": 0,
    "no-misleading-character-class": 0,
    "no-multi-assign": 2,
    "no-multi-str": 0,
    "no-negated-condition": 2,
    "no-nested-ternary": 2,
    "no-new": 2,
    "no-new-func": 2,
    "no-new-native-nonconstructor": 0,
    "no-new-wrappers": 2,
    "no-nonoctal-decimal-escape": 2,
    "no-obj-calls": 2,
    "no-octal": 2,
    "no-octal-escape": 2,
    "no-param-reassign": 2,
    "no-plusplus": 2,
    "no-promise-executor-return": 0,
    "no-proto": 2,
    "no-prototype-builtins": 0,
    "no-redeclare": 2,
    "no-regex-spaces": 2,
    "no-restricted-exports": 2,
    "no-restricted-globals": 2,
    "no-restricted-imports": 2,
    "no-restricted-properties": 2,
    "no-restricted-syntax": [
      "warn",
      {
        message: "Avoid classes (except for those extending Error)",
        selector: "ClassDeclaration[superClass.name!='Error']",
      },
      {
        message: "Avoid classes (except for those extending Error)",
        selector: "ClassExpression[superClass.name!='Error']",
      },
    ],
    "no-return-assign": 2,
    "no-return-await": 0,
    "no-script-url": 2,
    "no-self-assign": 2,
    "no-self-compare": 2,
    "no-sequences": 2,
    "no-setter-return": 0,
    "no-shadow": 2,
    "no-shadow-restricted-names": 2,
    "no-sparse-arrays": 0,
    "no-template-curly-in-string": 2,
    "no-ternary": 0,
    "no-this-before-super": 0,
    "no-undef": 2,
    "no-undef-init": 2,
    "no-undefined": 0,
    "no-underscore-dangle": 0,
    "no-unmodified-loop-condition": 2,
    "no-unneeded-ternary": 2,
    "no-unreachable": 2,
    "no-unreachable-loop": 2,
    "no-unsafe-finally": 2,
    "no-unsafe-negation": 2,
    "no-unsafe-optional-chaining": 2,
    "no-unused-expressions": 0,
    "no-unused-labels": 0,
    "no-unused-private-class-members": 0,
    "no-unused-vars": [2, { ignoreRestSiblings: true }],
    "no-use-before-define": 0,
    "no-useless-backreference": 2,
    "no-useless-call": 2,
    "no-useless-catch": 2,
    "no-useless-computed-key": 2,
    "no-useless-concat": 2,
    "no-useless-constructor": 2,
    "no-useless-escape": 2,
    "no-useless-rename": 2,
    "no-useless-return": 2,
    "no-var": 2,
    "no-void": 0,
    "no-warning-comments": 0,
    "no-with": 2,
    "object-shorthand": 2,
    "one-var": 0,
    "operator-assignment": 2,
    "prefer-arrow-callback": [2, { allowNamedFunctions: true }],
    "prefer-const": ["error", { destructuring: "all" }],
    "prefer-destructuring": [2, { array: false, object: true }],
    "prefer-exponentiation-operator": 0,
    "prefer-named-capture-group": 2,
    "prefer-numeric-literals": 0,
    "prefer-object-has-own": 2,
    "prefer-object-spread": 2,
    "prefer-promise-reject-errors": 2,
    "prefer-regex-literals": 2,
    "prefer-rest-params": 2,
    "prefer-spread": 2,
    "prefer-template": 2,
    radix: 2,
    "require-atomic-updates": 2,
    "require-await": 2,
    "require-unicode-regexp": 0,
    "require-yield": 0,
    "sort-imports": 0,
    // using canonical/sort-keys instead
    "sort-keys": 0,
    // It can stay off, as we have another rule to disallow variable declared in one go.
    "sort-vars": 0,
    "spaced-comment": 2,
    strict: 0,
    "symbol-description": 0,
    "use-isnan": 2,
    "valid-typeof": 2,
    "vars-on-top": 0,
    yoda: 0,
    ...deprecatedESlintStylisticRules,
  },
};

export default eslintConfig;
